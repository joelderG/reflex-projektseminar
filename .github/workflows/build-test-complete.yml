# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: "ReFlex: Build & Test"

on:  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # caches are scoped to branches and keys !
  # however, cache for main branch can be accessed by other branches --> therefore, pushes on main should always trigger this workflow
  push:
    branches:
      - main
  # run when main branch is updated and on pull requests
  # as result, child workflows are not triggered anymore on prs
  pull_request: 
    types: [ opened, reopened, edited, synchronize ]
    branches:
      - main

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # build library, generate test report and upload as artifact
  generate_test-report_library:
    uses: ./.github/workflows/library-test.yml
  # build server, generate test report and upload as artifact
  generate_test-report_server:
    uses: ./.github/workflows/server-test.yml      
  # Build job
  collect-cache_data:
    runs-on: ubuntu-latest
    needs: [ generate_test-report_library, generate_test-report_server ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Create subfolder for library report
        shell: bash
        run: mkdir -p docs/test/library/report 
      - name: Create subfolder for Server report
        shell: bash
        run: mkdir -p docs/test/server/report          
      - name: Download library report        
        uses: actions/download-artifact@main        
        with:
          name: ${{ needs.generate_test-report_library.outputs.artifact_name }}
          path: ${{ github.workspace }}/docs/test/library/report/
      - name: Download server report        
        uses: actions/download-artifact@main        
        with:
          name: ${{ needs.generate_test-report_server.outputs.artifact_name }}
          path: ${{ github.workspace }}/docs/test/server/report/         
      - name: cache reports directory
        uses: actions/cache/save@main
        id: cache-reports
        with:
          path: ${{ github.workspace }}/docs/test
          key: test-reports
          enableCrossOsArchive: true
